剑指offer 第一遍没有想出解法的题目
1，二进制中1的个数
2，调整数组顺序使奇数位于偶数前面，只想出了暴力解，而且还无法证明
3,树的子结构,完全没思路的那种
4,带min的栈
5,栈的压入、弹出序列
6,二叉搜索树的后序遍历序列,
什么是二叉搜索树，空树，或者所有左子树节点小于当前节点，所有右子树节点大于当前节点
7,数组中和为某值的路径
8，二叉搜索树和双向链表的参考牛客的两种方法
9,字符串的排列
10，最小k个数，如何用大根堆做
11,把数组排成最小的数
12，正则表达式匹配
13，扑克牌顺子
14，不用加减乘除做加法
15，对称的二叉树
16, 逆序对
17, 剪绳子（注意一下贪心的证明）
18, 滑动窗口的最大值(队列方法，自己用暴力实现了)
19, 连续子数组的最大和 （动态规划）
20, 扑克牌顺子
21, 字符流中第一个不重复的数字
22, 矩阵中的路径

primary     leetcode 初级算法卡片里面的题目,共计 49题
medium      leetcode 中级算法卡片里面的题目,共计 45题
random      leetcode 随机刷的题


4   时间复杂度为 O(log(m+n))的二分法，以及对奇偶数不用分情况的优化
123 这道题没有想出来，dp
5   当时只想出来暴力解
268 异或求解，当时没想起来
7   如何判断溢出,出理的非常巧妙，可以看看
22  自己没有想出来，在艳坤的提醒下才做出来
28  字符匹配算法，kmp(虽然手写出来了，但是时间复杂度很高)
29  没想出来，是看的leetcode上的解法
30  没想出来，看的leetcode上的解法，但是时间复杂度比较差
31  没想出来
33  二分法做出来了，但二分的边界情况尝试了很多次
39  如何进行剪枝
40  和39题很相似，两道题都是基于回溯，剪枝；不过这道只想出来暴力，对于剪枝当时没有想到如何进行剪枝，（画图更容易理解，可以参考题解中的图）
47  和39，40题很相似，但是剪枝存在问题，剪的不干净？
206 递归解法，和双指针迭代，还需要捋捋，不够熟悉
322. 零钱兑换,BFS剪枝和dp，都需要看一下，BFS能想到但是超时了，重点需要看一下如何剪枝
994 比较典型的BFS思路，以后看到具有这种(需要向周围扩散的)，需要想到BFS解法
1254没想出来，而且要注意一点，不能利用成员变量计数
面试题 10.01，双指针解法没想到
面试题57 - II. 和为s的连续正数序列,滑动窗口解法
面试题59 - II. 队列的最大值 之前在《剑指offer》做过,但是这次还是没有想到





心得
1.做算法题的时候,看到题目第一反应是给题目归类，看用哪种方法来解，比如说，看到 logN级别的时间复杂度，基本上就是用二分法来解了
2.遇到没有思路的题目,先想想如果让人来解,应该是怎么做的
3.碰到回溯，剪枝的题目，需要先将需要走的路径画出来，这样有助于思考，如题39，40
4.区间求差问题，可以转换为连续子数组求和问题，参考如下链接
https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/solution/121-mai-mai-gu-piao-de-zui-jia-shi-ji-dp-7-xing-ji/







17. 电话号码的字母组合
22. 括号生成,dp和DFS了解一下
46. 全排列
78. 子集

都是基于回溯和DFS的题目,碰到此类题目,要先将解的空间转化为一个多叉树的树状结构,求解过程就是对这棵树的遍历
这里拿 78. 子集 这题来举例,假设一个有 n 个不重复元素的集合,需要求其子集,
可以这样思考:
1.对于每个元素,都有两种选择,一是加入子集,二是不加入子集
2.这个求解过程就变成了对一颗深度为n+1(假设有一个根节点,孩子节点是第一个元素的选择情况)的二叉树进行遍历的过程
3.进行DFS时,要注意回溯,递归是系统帮我们做了相应的操作,但很多时候我们需要自己对遍历过的 "路径" 进行回溯

