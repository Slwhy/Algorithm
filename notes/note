剑指offer 第一遍没有想出解法的题目
1，二进制中1的个数
2，调整数组顺序使奇数位于偶数前面，只想出了暴力解，而且还无法证明
3,树的子结构,完全没思路的那种
4,带min的栈
5,栈的压入、弹出序列
6,二叉搜索树的后序遍历序列,
什么是二叉搜索树，空树，或者所有左子树节点小于当前节点，所有右子树节点大于当前节点
7,数组中和为某值的路径
8，二叉搜索树和双向链表的参考牛客的两种方法
9,字符串的排列
10，最小k个数，如何用大根堆做
11,把数组排成最小的数
12，正则表达式匹配
13，扑克牌顺子
14，不用加减乘除做加法
15，对称的二叉树
16, 逆序对
17, 剪绳子（注意一下贪心的证明）
18, 滑动窗口的最大值(队列方法，自己用暴力实现了)
19, 连续子数组的最大和 （动态规划）
20, 扑克牌顺子
21, 字符流中第一个不重复的数字
22, 矩阵中的路径

primary     leetcode 初级算法卡片里面的题目,共计 49题
medium      leetcode 中级算法卡片里面的题目,共计 45题
random      leetcode 随机刷的题



17. 电话号码的字母组合
22. 括号生成,dp和DFS了解一下
46. 全排列
78. 子集

都是基于回溯和DFS的题目,碰到此类题目,要先将解的空间转化为一个多叉树的树状结构,求解过程就是对这棵树的遍历
这里拿 78. 子集 这题来举例,假设一个有 n 个不重复元素的集合,需要求其子集,
可以这样思考:
1.对于每个元素,都有两种选择,一是加入子集,二是不加入子集
2.这个求解过程就变成了对一颗深度为n+1(假设有一个根节点,孩子节点是第一个元素的选择情况)的二叉树进行遍历的过程
3.进行DFS时,要注意回溯,递归是系统帮我们做了相应的操作,但很多时候我们需要自己对遍历过的 "路径" 进行回溯

