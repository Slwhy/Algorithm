4   时间复杂度为 O(log(m+n))的二分法，以及对奇偶数不用分情况的优化
123 这道题没有想出来，dp
5   当时只想出来暴力解
268 异或求解，当时没想起来
7   如何判断溢出,出理的非常巧妙，可以看看
22  自己没有想出来，在艳坤的提醒下才做出来
28  字符匹配算法，kmp(虽然手写出来了，但是时间复杂度很高)
29  没想出来，是看的leetcode上的解法
30  没想出来，看的leetcode上的解法，但是时间复杂度比较差
31  没想出来
33  二分法做出来了，但二分的边界情况尝试了很多次
39  如何进行剪枝
40  和39题很相似，两道题都是基于回溯，剪枝；不过这道只想出来暴力，对于剪枝当时没有想到如何进行剪枝，（画图更容易理解，可以参考题解中的图）
47  和39，40题很相似，但是剪枝存在问题，剪的不干净？
206 递归解法，和双指针迭代，还需要捋捋，不够熟悉
322. 零钱兑换,BFS剪枝和dp，都需要看一下，BFS能想到但是超时了，重点需要看一下如何剪枝
994 比较典型的BFS思路，以后看到具有这种(需要向周围扩散的)，需要想到BFS解法
1254没想出来，而且要注意一点，不能利用成员变量计数
面试题 10.01，双指针解法没想到
面试题57 - II. 和为s的连续正数序列,滑动窗口解法
面试题59 - II. 队列的最大值 之前在《剑指offer》做过,但是这次还是没有想到





心得
1.做算法题的时候,看到题目第一反应是给题目归类，看用哪种方法来解，比如说，看到 logN级别的时间复杂度，基本上就是用二分法来解了
2.遇到没有思路的题目,先想想如果让人来解,应该是怎么做的
3.碰到回溯，剪枝的题目，需要先将需要走的路径画出来，这样有助于思考，如题39，40
4.区间求差问题，可以转换为连续子数组求和问题，参考如下链接
https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/solution/121-mai-mai-gu-piao-de-zui-jia-shi-ji-dp-7-xing-ji/







